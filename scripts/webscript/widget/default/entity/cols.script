// A script to return structure
// using tabulator to display table data

windowId = "window_countries";

response = {};

e = #entity.getEntity(entity);
s = #transform.getStructure(e.structureUri);

idField = {};
columns = [];
for f in s.fields do
    field = #transform.getField(f.fieldUri);
    column = {};
    column.id = f.key;
    column.title = f.key;
    column.header = f.key;
    column.field = f.key;
    column.fieldUri = f.fieldUri;
    column.type = field.fieldType;
    column.adjust = "data";
    if (f.key == "id") do
      idField = column;
    else do
      columns = columns + column;
    end
end

columns = [idField] + columns;

response.columns = columns;

// get view configuration (columns to be displayed)
viewableColumns = {};
vc = #entity.getViewConfiguration(e.structureUri);
for idx = 0 to size(vc) - 1 do
	viewableColumns[vc[idx]["name"]] = {
		"visible": true
	};
end

window = {
	"properties": {
		"id": windowId,
		"view": "window",
		"left": 205,
		"top": 45,
		"width": 880,
		"height": 550,
		"move": true,
		"resize": true,
		"body": {}
	},
	"count": {
		"rows": 2,
		"row0_cols": 1,
		"row1_cols": 1
	},
	"components": {
		"head": {
			"view": "toolbar",
			"cols": [
				{ "view": "label", "label": title, "align": "center" },
				{ "view": "button", "type": "icon", "icon": "times", "width": 30, "click": "$$('" + windowId + "').close(); roc.deleteWindow('" + windowId + "')" }
			]
		},
		"00": {
			"id": "country-datatable",
			"view": "tabulator",
			"columns": columns
		},
		"10": {
			"view": "layout",
			"cols": [
				{},
				{},
				{
					"id": "country-datatable-more-data",
					"view": "button",
					"label": "More ..",
					"css": "table-action-button-container",
					"click": "tasks.country_datatable_getMoreData",
					"width": 150
				},
				{},
				{}
			]
		}
	}
};

response.window = window;

// since tabulator is not a built-in webix component
protoViews = {
	"country-datatable": {
		"name": "tabulator",
		"id": "country-tabulator",
		"data": fromjson(data),
		"config": {
			"columns": columns,
			"fitColumns": true,
			"height": "466px",
			"pagination": true,
			// when setting pagination as true,
			// groupBy and sortBy should be set to the same column
			// to avoid fragmented grouping
			//"groupBy": "ccy",
			"sortBy": "name",
			"sortDir": "asc"
		},
		"innerHtml": "<div id='country-tabulator' style='width:100%'></div>",
		"viewableColumns": viewableColumns,
		"filter": ["numId", ">", 100],
		// formatting:
		// for every column that needs a formatter, pass a function name;
		// the function is defined in roc.tasks.js, evaluated in roc.directives.js
		"formatter": {
			"id": "tasks.country_datatable_id_styleAsLink",
			"numId": "tasks.country_datatable_numId_greaterThan500"
		},
		"onClick": {
			"id": "tasks.country_datatable_id_showInfo"
		}
	}
};

response.protoViews = protoViews;

return(json(response));
